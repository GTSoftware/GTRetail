<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 GT Software.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->
<entity-mappings version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm">

    <named-native-query name="ReporteVentasQueryCount">
        <query>
            select count(1)
            from productos p
            join productos_tipos_unidades u on p.id_tipo_unidad_venta = u.id_tipo_unidad
            where exists(select 1
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer)))
        </query>
    </named-native-query>

    <named-native-query name="ReporteVentasQuery" result-set-mapping="ReporteVentasMapping">
        <query>
            select
            p.id_producto,
            p.codigo_propio,
            p.codigo_fabricante,
            p.descripcion,
            u.nombre_unidad,
            p.stock_minimo,
            (select sum(pxd.stock) from productos_x_depositos pxd where pxd.id_producto = p.id_producto) as
            stock_actual,
            (select sum(cl.cantidad * ntc.signo)
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            join negocio_tipos_comprobante ntc on comp.id_negocio_tipo_comprobante = ntc.id_negocio_tipo_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer))) as
            cantidad_vendida,
            (select sum(cl.costo_neto_unitario * cl.cantidad * ntc.signo)
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            join negocio_tipos_comprobante ntc on comp.id_negocio_tipo_comprobante = ntc.id_negocio_tipo_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer))) as
            costo_total_ventas,
            (select sum(cl.sub_total * ntc.signo)
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            join negocio_tipos_comprobante ntc on comp.id_negocio_tipo_comprobante = ntc.id_negocio_tipo_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer))) as
            total_precio_venta,
            (select count(distinct comp.id_comprobante)
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer))) as
            cant_comprobantes,
            (Select '[' || prov.id_persona || '] ' || prov.razon_social
            from personas prov where prov.id_persona =
            p.id_proveedor_habitual) as proveedor

            from productos p
            join productos_tipos_unidades u on p.id_tipo_unidad_venta = u.id_tipo_unidad
            where exists(select 1
            from comprobantes comp
            join comprobantes_lineas cl on comp.id_comprobante = cl.id_comprobante
            where comp.anulada = false
            and comp.fecha_comprobante between ?fechaDesde and ?fechaHasta
            and cl.id_producto = p.id_producto
            and (coalesce(null, ?idSucursal) is null or comp.id_sucursal = cast(?idSucursal as integer)))
            order by cant_comprobantes desc
        </query>
    </named-native-query>

    <sql-result-set-mapping name="ReporteVentasMapping">

        <constructor-result target-class="ar.com.gtsoftware.dto.reportes.VentaPorProducto">
            <column name="id_producto" class="java.lang.Long"/>
            <column name="codigo_propio" class="java.lang.String"/>
            <column name="codigo_fabricante" class="java.lang.String"/>
            <column name="descripcion" class="java.lang.String"/>
            <column name="nombre_unidad" class="java.lang.String"/>
            <column name="stock_minimo" class="java.math.BigDecimal"/>
            <column name="stock_actual" class="java.math.BigDecimal"/>
            <column name="cantidad_vendida" class="java.math.BigDecimal"/>
            <column name="costo_total_ventas" class="java.math.BigDecimal"/>
            <column name="total_precio_venta" class="java.math.BigDecimal"/>
            <column name="cant_comprobantes" class="java.lang.Integer"/>
            <column name="proveedor" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>
</entity-mappings>